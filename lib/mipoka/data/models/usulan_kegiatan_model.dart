import 'package:equatable/equatable.dart';
import 'package:flutter/material.dart';
import 'package:mipoka/mipoka/domain/entities/usulan_kegiatan.dart';

class UsulanKegiatanModel extends UsulanKegiatan {
  const UsulanKegiatanModel({
    required int idUsulan,
    required int idUser,
    required int idOrmawa,
    required String pembiayaan,
    required String namaKegiatan,
    required String bentukKegiatan,
    required String deskripsiKegiatan,
    required DateTime tanggalMulaiKegiatan,
    required DateTime tanggalSelesaiKegiatan,
    required TimeOfDay waktuMulaiKegiatan,
    required TimeOfDay waktuSelesaiKegiatan,
    required String tempatKegiatan,
    required DateTime tanggalKeberangkatan,
    required DateTime tanggalKepulangan,
    required int jumlahPartisipan,
    required String targetKegiatan,
    required int totalPendana,
    required String tandaTanganOrmawa,
    required int idPartisipan,
    required int idRincianBiayaKegiatan,
    required String ketuaOrmawa,
    required String pembina,
    required String latarBelakang,
    required String tujuanKegiatan,
    required String manfaatKegiatan,
    required String bentukPelaksanaanKegiatan,
    required String targetPencapaianKegiatan,
    required String waktuDanTempatPelaksanaan,
    required String rencanaAnggaranKegiatan,
    required int idPanitiaPeserta,
    required int idTertibAcara,
    required String perlengkapan,
    required String penutup,
    required String postinganKegiatan,
    required String dokumentasiKegiatan,
    required String tabulasiHasil,
    required String fakturPembayaran,
    required String status,
    required String validasiPembina,
    required String roles,
    required String file,
    required DateTime updatedAt,
    required DateTime createdAt,
  }) : super(
    idUsulan: idUsulan,
    idUser: idUser,
    idOrmawa: idOrmawa,
    pembiayaan: pembiayaan,
    namaKegiatan: namaKegiatan,
    bentukKegiatan: bentukKegiatan,
    deskripsiKegiatan: deskripsiKegiatan,
    tanggalMulaiKegiatan: tanggalMulaiKegiatan,
    tanggalSelesaiKegiatan: tanggalSelesaiKegiatan,
    waktuMulaiKegiatan: waktuMulaiKegiatan,
    waktuSelesaiKegiatan: waktuSelesaiKegiatan,
    tempatKegiatan: tempatKegiatan,
    tanggalKeberangkatan: tanggalKeberangkatan,
    tanggalKepulangan: tanggalKepulangan,
    jumlahPartisipan: jumlahPartisipan,
    targetKegiatan: targetKegiatan,
    totalPendana: totalPendana,
    tandaTanganOrmawa: tandaTanganOrmawa,
    idPartisipan: idPartisipan,
    idRincianBiayaKegiatan: idRincianBiayaKegiatan,
    ketuaOrmawa: ketuaOrmawa,
    pembina: pembina,
    latarBelakang: latarBelakang,
    tujuanKegiatan: tujuanKegiatan,
    manfaatKegiatan: manfaatKegiatan,
    bentukPelaksanaanKegiatan: bentukPelaksanaanKegiatan,
    targetPencapaianKegiatan: targetPencapaianKegiatan,
    waktuDanTempatPelaksanaan: waktuDanTempatPelaksanaan,
    rencanaAnggaranKegiatan: rencanaAnggaranKegiatan,
    idPanitiaPeserta: idPanitiaPeserta,
    idTertibAcara: idTertibAcara,
    perlengkapan: perlengkapan,
    penutup: penutup,
    postinganKegiatan: postinganKegiatan,
    dokumentasiKegiatan: dokumentasiKegiatan,
    tabulasiHasil: tabulasiHasil,
    fakturPembayaran: fakturPembayaran,
    status: status,
    validasiPembina: validasiPembina,
    roles: roles,
    file: file,
    updatedAt: updatedAt,
    createdAt: createdAt,
  );

  factory UsulanKegiatanModel.fromEntity(UsulanKegiatan usulanKegiatan) {
    return UsulanKegiatanModel(
      idUsulan: usulanKegiatan.idUsulan,
      idUser: usulanKegiatan.idUser,
      idOrmawa: usulanKegiatan.idOrmawa,
      pembiayaan: usulanKegiatan.pembiayaan,
      namaKegiatan: usulanKegiatan.namaKegiatan,
      bentukKegiatan: usulanKegiatan.bentukKegiatan,
      deskripsiKegiatan: usulanKegiatan.deskripsiKegiatan,
      tanggalMulaiKegiatan: usulanKegiatan.tanggalMulaiKegiatan,
      tanggalSelesaiKegiatan: usulanKegiatan.tanggalSelesaiKegiatan,
      waktuMulaiKegiatan: usulanKegiatan.waktuMulaiKegiatan,
      waktuSelesaiKegiatan: usulanKegiatan.waktuSelesaiKegiatan,
      tempatKegiatan: usulanKegiatan.tempatKegiatan,
      tanggalKeberangkatan: usulanKegiatan.tanggalKeberangkatan,
      tanggalKepulangan: usulanKegiatan.tanggalKepulangan,
      jumlahPartisipan: usulanKegiatan.jumlahPartisipan,
      targetKegiatan: usulanKegiatan.targetKegiatan,
      totalPendana: usulanKegiatan.totalPendana,
      tandaTanganOrmawa: usulanKegiatan.tandaTanganOrmawa,
      idPartisipan: usulanKegiatan.idPartisipan,
      idRincianBiayaKegiatan: usulanKegiatan.idRincianBiayaKegiatan,
      ketuaOrmawa: usulanKegiatan.ketuaOrmawa,
      pembina: usulanKegiatan.pembina,
      latarBelakang: usulanKegiatan.latarBelakang,
      tujuanKegiatan: usulanKegiatan.tujuanKegiatan,
      manfaatKegiatan: usulanKegiatan.manfaatKegiatan,
      bentukPelaksanaanKegiatan: usulanKegiatan.bentukPelaksanaanKegiatan,
      targetPencapaianKegiatan: usulanKegiatan.targetPencapaianKegiatan,
      waktuDanTempatPelaksanaan: usulanKegiatan.waktuDanTempatPelaksanaan,
      rencanaAnggaranKegiatan: usulanKegiatan.rencanaAnggaranKegiatan,
      idPanitiaPeserta: usulanKegiatan.idPanitiaPeserta,
      idTertibAcara: usulanKegiatan.idTertibAcara,
      perlengkapan: usulanKegiatan.perlengkapan,
      penutup: usulanKegiatan.penutup,
      postinganKegiatan: usulanKegiatan.postinganKegiatan,
      dokumentasiKegiatan: usulanKegiatan.dokumentasiKegiatan,
      tabulasiHasil: usulanKegiatan.tabulasiHasil,
      fakturPembayaran: usulanKegiatan.fakturPembayaran,
      status: usulanKegiatan.status,
      validasiPembina: usulanKegiatan.validasiPembina,
      roles: usulanKegiatan.roles,
      file: usulanKegiatan.file,
      updatedAt: usulanKegiatan.updatedAt,
      createdAt: usulanKegiatan.createdAt,
    );
  }

  factory UsulanKegiatanModel.fromJson(Map<String, dynamic> json) {
    return UsulanKegiatanModel(
      idUsulan: json['idUsulan'],
      idUser: json['idUser'],
      idOrmawa: json['idOrmawa'],
      pembiayaan: json['pembiayaan'],
      namaKegiatan: json['namaKegiatan'],
      bentukKegiatan: json['bentukKegiatan'],
      deskripsiKegiatan: json['deskripsiKegiatan'],
      tanggalMulaiKegiatan: DateTime.parse(json['tanggalMulaiKegiatan']),
      tanggalSelesaiKegiatan: DateTime.parse(json['tanggalSelesaiKegiatan']),
      waktuMulaiKegiatan: TimeOfDay.fromDateTime(DateTime.parse(json['waktuMulaiKegiatan'])),
      waktuSelesaiKegiatan: TimeOfDay.fromDateTime(DateTime.parse(json['waktuSelesaiKegiatan'])),
      tempatKegiatan: json['tempatKegiatan'],
      tanggalKeberangkatan: DateTime.parse(json['tanggalKeberangkatan']),
      tanggalKepulangan: DateTime.parse(json['tanggalKepulangan']),
      jumlahPartisipan: json['jumlahPartisipan'],
      targetKegiatan: json['targetKegiatan'],
      totalPendana: json['totalPendana'],
      tandaTanganOrmawa: json['tandaTanganOrmawa'],
      idPartisipan: json['idPartisipan'],
      idRincianBiayaKegiatan: json['idRincianBiayaKegiatan'],
      ketuaOrmawa: json['ketuaOrmawa'],
      pembina: json['pembina'],
      latarBelakang: json['latarBelakang'],
      tujuanKegiatan: json['tujuanKegiatan'],
      manfaatKegiatan: json['manfaatKegiatan'],
      bentukPelaksanaanKegiatan: json['bentukPelaksanaanKegiatan'],
      targetPencapaianKegiatan: json['targetPencapaianKegiatan'],
      waktuDanTempatPelaksanaan: json['waktuDanTempatPelaksanaan'],
      rencanaAnggaranKegiatan: json['rencanaAnggaranKegiatan'],
      idPanitiaPeserta: json['idPanitiaPeserta'],
      idTertibAcara: json['idTertibAcara'],
      perlengkapan: json['perlengkapan'],
      penutup: json['penutup'],
      postinganKegiatan: json['postinganKegiatan'],
      dokumentasiKegiatan: json['dokumentasiKegiatan'],
      tabulasiHasil: json['tabulasiHasil'],
      fakturPembayaran: json['fakturPembayaran'],
      status: json['status'],
      validasiPembina: json['validasiPembina'],
      roles: json['roles'],
      file: json['file'],
      updatedAt: DateTime.parse(json['updatedAt']),
      createdAt: DateTime.parse(json['createdAt']),
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'idUsulan': idUsulan,
      'idUser': idUser,
      'idOrmawa': idOrmawa,
      'pembiayaan': pembiayaan,
      'namaKegiatan': namaKegiatan,
      'bentukKegiatan': bentukKegiatan,
      'deskripsiKegiatan': deskripsiKegiatan,
      'tanggalMulaiKegiatan': tanggalMulaiKegiatan.toIso8601String(),
      'tanggalSelesaiKegiatan': tanggalSelesaiKegiatan.toIso8601String(),
      'waktuMulaiKegiatan': waktuMulaiKegiatan,
      'waktuSelesaiKegiatan': waktuSelesaiKegiatan,
      'tempatKegiatan': tempatKegiatan,
      'tanggalKeberangkatan': tanggalKeberangkatan.toIso8601String(),
      'tanggalKepulangan': tanggalKepulangan.toIso8601String(),
      'jumlahPartisipan': jumlahPartisipan,
      'targetKegiatan': targetKegiatan,
      'totalPendana': totalPendana,
      'tandaTanganOrmawa': tandaTanganOrmawa,
      'idPartisipan': idPartisipan,
      'idRincianBiayaKegiatan': idRincianBiayaKegiatan,
      'ketuaOrmawa': ketuaOrmawa,
      'pembina': pembina,
      'latarBelakang': latarBelakang,
      'tujuanKegiatan': tujuanKegiatan,
      'manfaatKegiatan': manfaatKegiatan,
      'bentukPelaksanaanKegiatan': bentukPelaksanaanKegiatan,
      'targetPencapaianKegiatan': targetPencapaianKegiatan,
      'waktuDanTempatPelaksanaan': waktuDanTempatPelaksanaan,
      'rencanaAnggaranKegiatan': rencanaAnggaranKegiatan,
      'idPanitiaPeserta': idPanitiaPeserta,
      'idTertibAcara': idTertibAcara,
      'perlengkapan': perlengkapan,
      'penutup': penutup,
      'postinganKegiatan': postinganKegiatan,
      'dokumentasiKegiatan': dokumentasiKegiatan,
      'tabulasiHasil': tabulasiHasil,
      'fakturPembayaran': fakturPembayaran,
      'status': status,
      'validasiPembina': validasiPembina,
      'roles': roles,
      'file': file,
      'updatedAt': updatedAt.toIso8601String(),
      'createdAt': createdAt.toIso8601String(),
    };
  }

  @override
  List<Object?> get props => [
    idUsulan,
    idUser,
    idOrmawa,
    pembiayaan,
    namaKegiatan,
    bentukKegiatan,
    deskripsiKegiatan,
    tanggalMulaiKegiatan,
    tanggalSelesaiKegiatan,
    waktuMulaiKegiatan,
    waktuSelesaiKegiatan,
    tempatKegiatan,
    tanggalKeberangkatan,
    tanggalKepulangan,
    jumlahPartisipan,
    targetKegiatan,
    totalPendana,
    tandaTanganOrmawa,
    idPartisipan,
    idRincianBiayaKegiatan,
    ketuaOrmawa,
    pembina,
    latarBelakang,
    tujuanKegiatan,
    manfaatKegiatan,
    bentukPelaksanaanKegiatan,
    targetPencapaianKegiatan,
    waktuDanTempatPelaksanaan,
    rencanaAnggaranKegiatan,
    idPanitiaPeserta,
    idTertibAcara,
    perlengkapan,
    penutup,
    postinganKegiatan,
    dokumentasiKegiatan,
    tabulasiHasil,
    fakturPembayaran,
    status,
    validasiPembina,
    roles,
    file,
    updatedAt,
    createdAt,
  ];
}
