import 'package:mipoka/mipoka/data/models/rincian_biaya_kegiatan_model.dart';
import 'package:mipoka/mipoka/data/models/ormawa_model.dart';
import 'package:mipoka/mipoka/data/models/partisipan_model.dart';
import 'package:mipoka/mipoka/data/models/peserta_kegiatan_laporan_model.dart';
import 'package:mipoka/mipoka/data/models/biaya_kegiatan_model.dart';
import 'package:mipoka/mipoka/data/models/tertib_acara_model.dart';
import 'package:mipoka/mipoka/data/models/user_model.dart';
import 'package:mipoka/mipoka/data/models/usulan_kegiatan_model.dart';
import 'package:mipoka/mipoka/domain/entities/laporan.dart';

// => Just updated
class LaporanModel extends Laporan {
  final OrmawaModel ormawaModel;
  final MipokaUserModel userModel;
  final UsulanKegiatanModel usulanKegiatanModel;
  final RincianBiayaKegiatanModel biayaKegiatanModel;
  final PartisipanModel partisipanModel;
  final BiayaKegiatanModel rincianBiayaKegiatanModel;
  final TertibAcaraModel tertibAcaraModel;
  final PesertaKegiatanLaporanModel pesertaKegiatanLaporanModel;

  const LaporanModel({
    required super.idLaporan,
    required this.ormawaModel,
    required this.userModel,
    required this.usulanKegiatanModel,
    required super.pembiayaan,
    required super.namaKegiatan,
    required super.bentukKegiatan,
    required super.deskripsiKegiatan,
    required super.tanggalMulaiKegiatan,
    required super.tanggalSelesaiKegiatan,
    required super.waktuMulaiKegiatan,
    required super.waktuSelesaiKegiatan,
    required super.tempatKegiatan,
    required super.tanggalKeberangkatan,
    required super.tanggalKepulangan,
    required super.jumlahPartisipan,
    required super.targetKegiatan,
    required super.totalPendanaan,
    required super.tandaTanganOrmawa,
    required this.partisipanModel,
    required this.rincianBiayaKegiatanModel,
    required super.ketuaOrmawa,
    required super.pembina,
    required super.latarBelakang,
    required super.tujuanKegiatan,
    required super.manfaatKegiatan,
    required super.bentukPelaksanaanKegiatan,
    required super.targetPencapaianKegiatan,
    required super.waktuDanTempatPelaksanaan,
    required super.rencanaAnggaranKegiatan,
    required this.tertibAcaraModel,
    required super.perlengkapan,
    required super.penutup,
    required super.postinganKegiatan,
    required super.dokumentasiKegiatan,
    required super.tabulasiHasil,
    required super.fakturPembayaran,
    required super.status,
    required super.validasiPembina,
    required super.roles,
    required super.file,
    required super.updatedAt,
    required super.createdAt,
    required super.filePeserta,
    required this.biayaKegiatanModel,
    required this.pesertaKegiatanLaporanModel,
    required super.hasilKegiatan,
    required super.laporanUpdatedAt,
    required super.laporanCreatedAt,
  }) : super(ormawa: ormawaModel,
    user: userModel,
    usulanKegiatan: usulanKegiatanModel,
    biayaKegiatan: biayaKegiatanModel,
    partisipan: partisipanModel,
    rincianBiayaKegiatan: rincianBiayaKegiatanModel,
    tertibAcara: tertibAcaraModel,
    pesertaKegiatanLaporan: pesertaKegiatanLaporanModel,
  );

  factory LaporanModel.fromEntity(Laporan laporan) {
    return LaporanModel(
      idLaporan: laporan.idLaporan,
      ormawaModel: OrmawaModel.fromEntity(laporan.ormawa),
      userModel: MipokaUserModel.fromEntity(laporan.user),
      usulanKegiatanModel: UsulanKegiatanModel.fromEntity(laporan.usulanKegiatan),
      pembiayaan: laporan.pembiayaan,
      namaKegiatan: laporan.namaKegiatan,
      bentukKegiatan: laporan.bentukKegiatan,
      deskripsiKegiatan: laporan.deskripsiKegiatan,
      tanggalMulaiKegiatan: laporan.tanggalMulaiKegiatan,
      tanggalSelesaiKegiatan: laporan.tanggalSelesaiKegiatan,
      waktuMulaiKegiatan: laporan.waktuMulaiKegiatan,
      waktuSelesaiKegiatan: laporan.waktuSelesaiKegiatan,
      tempatKegiatan: laporan.tempatKegiatan,
      tanggalKeberangkatan: laporan.tanggalKeberangkatan,
      tanggalKepulangan: laporan.tanggalKepulangan,
      jumlahPartisipan: laporan.jumlahPartisipan,
      targetKegiatan: laporan.targetKegiatan,
      totalPendanaan: laporan.totalPendanaan,
      tandaTanganOrmawa: laporan.tandaTanganOrmawa,
      partisipanModel: PartisipanModel.fromEntity(laporan.partisipan),
      rincianBiayaKegiatanModel: BiayaKegiatanModel.fromEntity(laporan.rincianBiayaKegiatan),
      ketuaOrmawa: laporan.ketuaOrmawa,
      pembina: laporan.pembina,
      latarBelakang: laporan.latarBelakang,
      tujuanKegiatan: laporan.tujuanKegiatan,
      manfaatKegiatan: laporan.manfaatKegiatan,
      bentukPelaksanaanKegiatan: laporan.bentukPelaksanaanKegiatan,
      targetPencapaianKegiatan: laporan.targetPencapaianKegiatan,
      waktuDanTempatPelaksanaan: laporan.waktuDanTempatPelaksanaan,
      rencanaAnggaranKegiatan: laporan.rencanaAnggaranKegiatan,
      tertibAcaraModel: TertibAcaraModel.fromEntity(laporan.tertibAcara),
      perlengkapan: laporan.perlengkapan,
      penutup: laporan.penutup,
      postinganKegiatan: laporan.postinganKegiatan,
      dokumentasiKegiatan: laporan.dokumentasiKegiatan,
      tabulasiHasil: laporan.tabulasiHasil,
      fakturPembayaran: laporan.fakturPembayaran,
      status: laporan.status,
      validasiPembina: laporan.validasiPembina,
      roles: laporan.roles,
      file: laporan.file,
      updatedAt: laporan.updatedAt,
      createdAt: laporan.createdAt,
      filePeserta: laporan.filePeserta,
      biayaKegiatanModel: RincianBiayaKegiatanModel.fromEntity(laporan.biayaKegiatan),
      pesertaKegiatanLaporanModel: PesertaKegiatanLaporanModel.fromEntity(laporan.pesertaKegiatanLaporan),
      hasilKegiatan: laporan.hasilKegiatan,
      laporanUpdatedAt: laporan.laporanUpdatedAt,
      laporanCreatedAt: laporan.laporanCreatedAt,
    );
  }

  factory LaporanModel.fromJson(Map<String, dynamic> json) => LaporanModel(
    idLaporan: json["idLaporan"],
    ormawaModel: OrmawaModel.fromJson(json["ormawa"]),
    userModel: MipokaUserModel.fromJson(json["user"]),
    usulanKegiatanModel: UsulanKegiatanModel.fromJson(json["usulan"]),
    pembiayaan: json["pembiayaan"],
    namaKegiatan: json["namaKegiatan"],
    bentukKegiatan: json["bentukKegiatan"],
    deskripsiKegiatan: json["deskripsiKegiatan"],
    tanggalMulaiKegiatan: DateTime.parse(json["tanggalMulaiKegiatan"]),
    tanggalSelesaiKegiatan: DateTime.parse(json["tanggalSelesaiKegiatan"]),
    waktuMulaiKegiatan: json["waktuMulaiKegiatan"],
    waktuSelesaiKegiatan: json["waktuSelesaiKegiatan"],
    tempatKegiatan: json["tempatKegiatan"],
    tanggalKeberangkatan: DateTime.parse(json["tanggalKeberangkatan"]),
    tanggalKepulangan: DateTime.parse(json["tanggalKepulangan"]),
    jumlahPartisipan: json["jumlahPartisipan"],
    targetKegiatan: json["targetKegiatan"],
    totalPendanaan: json["totalPendanaan"],
    tandaTanganOrmawa: json["tandaTanganOrmawa"],
    partisipanModel: PartisipanModel.fromJson(json["partisipan"]),
    rincianBiayaKegiatanModel: BiayaKegiatanModel.fromJson(json["rincianBiayaKegiatan"]),
    ketuaOrmawa: json["ketuaOrmawa"],
    pembina: json["pembina"],
    latarBelakang: json["latarBelakang"],
    tujuanKegiatan: json["tujuanKegiatan"],
    manfaatKegiatan: json["manfaatKegiatan"],
    bentukPelaksanaanKegiatan: json["bentukPelaksanaanKegiatan"],
    targetPencapaianKegiatan: json["targetPencapaianKegiatan"],
    waktuDanTempatPelaksanaan: json["waktuDanTempatPelaksanaan"],
    rencanaAnggaranKegiatan: json["rencanaAnggaranKegiatan"],
    tertibAcaraModel: TertibAcaraModel.fromJson(json["tertibAcara"]),
    perlengkapan: json["perlengkapan"],
    penutup: json["penutup"],
    postinganKegiatan: json["postinganKegiatan"],
    dokumentasiKegiatan: json["dokumentasiKegiatan"],
    tabulasiHasil: json["tabulasiHasil"],
    fakturPembayaran: json["fakturPembayaran"],
    status: json["status"],
    validasiPembina: json["validasiPembina"],
    roles: json["roles"],
    file: json["file"],
    updatedAt: DateTime.parse(json["updatedAt"]),
    createdAt: DateTime.parse(json["createdAt"]),
    filePeserta: json["filePeserta"],
    biayaKegiatanModel: RincianBiayaKegiatanModel.fromJson(json["biayaKegiatan"]),
    pesertaKegiatanLaporanModel: PesertaKegiatanLaporanModel.fromJson(json["PesertaKegiatanLaporan"]),
    hasilKegiatan: json["hasilKegiatan"],
    laporanUpdatedAt: DateTime.parse(json["updated_at"]),
    laporanCreatedAt: DateTime.parse(json["created_at"]),
  );

  Map<String, dynamic> toJson() => {
    "idLaporan": idLaporan,
    "ormawa": ormawaModel.toJson(),
    "user": userModel.toJson(),
    "usulan": usulanKegiatanModel.toJson(),
    "pembiayaan": pembiayaan,
    "namaKegiatan": namaKegiatan,
    "bentukKegiatan": bentukKegiatan,
    "deskripsiKegiatan": deskripsiKegiatan,
    "tanggalMulaiKegiatan": "${tanggalMulaiKegiatan.year.toString().padLeft(4, '0')}-${tanggalMulaiKegiatan.month.toString().padLeft(2, '0')}-${tanggalMulaiKegiatan.day.toString().padLeft(2, '0')}",
    "tanggalSelesaiKegiatan": "${tanggalSelesaiKegiatan.year.toString().padLeft(4, '0')}-${tanggalSelesaiKegiatan.month.toString().padLeft(2, '0')}-${tanggalSelesaiKegiatan.day.toString().padLeft(2, '0')}",
    "waktuMulaiKegiatan": waktuMulaiKegiatan,
    "waktuSelesaiKegiatan": waktuSelesaiKegiatan,
    "tempatKegiatan": tempatKegiatan,
    "tanggalKeberangkatan": "${tanggalKeberangkatan.year.toString().padLeft(4, '0')}-${tanggalKeberangkatan.month.toString().padLeft(2, '0')}-${tanggalKeberangkatan.day.toString().padLeft(2, '0')}",
    "tanggalKepulangan": "${tanggalKepulangan.year.toString().padLeft(4, '0')}-${tanggalKepulangan.month.toString().padLeft(2, '0')}-${tanggalKepulangan.day.toString().padLeft(2, '0')}",
    "jumlahPartisipan": jumlahPartisipan,
    "targetKegiatan": targetKegiatan,
    "totalPendanaan": totalPendanaan,
    "tandaTanganOrmawa": tandaTanganOrmawa,
    "partisipan": partisipanModel.toJson(),
    "rincianBiayaKegiatan": rincianBiayaKegiatanModel.toJson(),
    "ketuaOrmawa": ketuaOrmawa,
    "pembina": pembina,
    "latarBelakang": latarBelakang,
    "tujuanKegiatan": tujuanKegiatan,
    "manfaatKegiatan": manfaatKegiatan,
    "bentukPelaksanaanKegiatan": bentukPelaksanaanKegiatan,
    "targetPencapaianKegiatan": targetPencapaianKegiatan,
    "waktuDanTempatPelaksanaan": waktuDanTempatPelaksanaan,
    "rencanaAnggaranKegiatan": rencanaAnggaranKegiatan,
    "tertibAcara": tertibAcaraModel.toJson(),
    "perlengkapan": perlengkapan,
    "penutup": penutup,
    "postinganKegiatan": postinganKegiatan,
    "dokumentasiKegiatan": dokumentasiKegiatan,
    "tabulasiHasil": tabulasiHasil,
    "fakturPembayaran": fakturPembayaran,
    "status": status,
    "validasiPembina": validasiPembina,
    "roles": roles,
    "file": file,
    "updatedAt": "${updatedAt.year.toString().padLeft(4, '0')}-${updatedAt.month.toString().padLeft(2, '0')}-${updatedAt.day.toString().padLeft(2, '0')}",
    "createdAt": "${createdAt.year.toString().padLeft(4, '0')}-${createdAt.month.toString().padLeft(2, '0')}-${createdAt.day.toString().padLeft(2, '0')}",
    "filePeserta": filePeserta,
    "biayaKegiatan": biayaKegiatanModel.toJson(),
    "PesertaKegiatanLaporan": pesertaKegiatanLaporanModel.toJson(),
    "hasilKegiatan": hasilKegiatan,
    "updated_at": laporanUpdatedAt.toIso8601String(),
    "created_at": laporanCreatedAt.toIso8601String(),
  };
}